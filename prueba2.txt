CREATE TABLE EMPLEADOS  
   (ID int PRIMARY KEY,  
    Nombre Varchar2(255 BYTE),  
	Apellido Varchar2(255 BYTE),
	Fecha_Nacimiento Date,
	Direccion Varchar2(255 BYTE),
	Sexo Varchar2(255 BYTE),
	Correo Varchar2(255 BYTE),
	Celular Varchar2(255 BYTE),
	Horas_Descanso Int,
	Fecha_Ingreso Date,
	Fecha_Retiro Date,
	Ubicacion_Actual Varchar2(255 BYTE), 
	Fecha_Ultimo_Vuelo Date,
	Fecha_Ultimo_Entrenamiento Date,
    Estado_Empleado Varchar2(255 BYTE),  	/* En oracle se debe realizar un check */
	Tipo_Empleados Varchar2(255 BYTE)
    );

asasasasa
    
    
CREATE SEQUENCE Id_Empleado 
increment
by 1
start with 1 minvalue 1;

CREATE TABLE PASAJEROS  
   (ID Number(*,0) PRIMARY KEY,
    Nombre Varchar2(255 BYTE),  
	Apellido Varchar2(255 BYTE),	
	Tipo_Documento  Varchar2(255 BYTE),
	Documento Varchar2(255 BYTE),
	Id_check_in Number(*,0)
    );
 
 CREATE SEQUENCE Id_Pasajero
increment
by 1
start with 1 minvalue 1;

CREATE TABLE RUTAS
   (ID Number(*,0) PRIMARY KEY,
	Frecuencia_Semanal Number(*,0),
    Distancia_Kilometros Binary_float,  
	Duracion_promedio Binary_float,
	Id_Aeropuerto_Origen Number(*,0), 
	Id_Aeropuerto_Destino Number(*,0)
    );

 CREATE SEQUENCE Id_Ruta
increment
by 1
start with 1 minvalue 1;

CREATE TABLE ITINERARIOS   
   (ID Number(*,0) PRIMARY KEY,
	Fecha_Salida_Real TimeStamp,	
	Fecha_Llegada_Real TimeStamp,
	Duracion_Real Date,
	Id_Check_in Number(*,0),
    Id_Vuelo Number(*,0),
    Id_Ruta Number(*,0),
    Id_Avion Number(*,0)
    );

 CREATE SEQUENCE Id_Itinerario
increment
by 1
start with 1 minvalue 1;

CREATE TABLE CHECK_INS  /*antes del vuelo */
	(ID Number(*,0) PRIMARY KEY,
	 Fecha_Salida_Programada TimeStamp,
	 Fecha_Llegada_Programada TimeStamp,
     Contacto_Emergencia Varchar2(255 BYTE),
     Ciudad_Contacto_Emergencia Varchar2(255 BYTE),
	 Correo_Contacto_Emergencia Varchar2(255 BYTE),
	 Telefono_Contacto_Emergencia Varchar2(255 BYTE),
     Pais_Contacto_Emergencia Varchar2(255 BYTE),
     Id_Pasajero Number(*,0),
     Id_Log_Vuelo Number(*,0)
     );
     
CREATE SEQUENCE Id_Check_in
increment
by 1
start with 1 minvalue 1;

CREATE TABLE VUELOS
	(ID Number(*,0) PRIMARY KEY,
	 Nombre Varchar2(255 BYTE),
     Id_Tripulante Number(*,0),
	 Id_Ruta Number(*,0)
     );

CREATE SEQUENCE Id_Vuelo
increment
by 1
start with 1 minvalue 1;

CREATE TABLE ITINERARIO_TRIPULANTES
   (ID Number(*,0) PRIMARY KEY,
	Id_Empleado Number(*,0)
    );
    
CREATE SEQUENCE Id_ITINERARIO_TRIPULANTE
increment
by 1
start with 1 minvalue 1;

CREATE TABLE AEROPUERTOS  
   (ID Number(*,0) PRIMARY KEY,
	Nombre_Aeropuerto Varchar2(255 BYTE),
	Pais Varchar2(255 BYTE),
    Ciudad Varchar2(255 BYTE),  
	Abreviatura Varchar2(255 BYTE),
    Cooredenadas Varchar2(255 byte)
    );
    
CREATE SEQUENCE Id_AEROPUERTO
increment
by 1
start with 1 minvalue 1;

CREATE TABLE LOG_VUELOS  
   (ID Number(*,0) PRIMARY KEY,
    Horareal TimeStamp,
	Fecha_UTC  Date,
	Latitud Binary_float,
	Longitud Binary_float,
	Altitud Binary_float,
	Velocidad Binary_float
    );

CREATE SEQUENCE Id_LOG_VUELO
increment
by 1
start with 1 minvalue 1;

CREATE TABLE AVIONES
   (ID Number(*,0) PRIMARY KEY,
    Registro_Vuelo Varchar2(100 BYTE),  /*numero de vuelo*/
    Numero_Serial Number(*,0),
    Edad Varchar2(255 BYTE),  
    Id_Tipo_Avion Number(*,0)
);

CREATE SEQUENCE Id_AVION
increment
by 1
start with 1 minvalue 1;

CREATE TABLE TIPOS_AVIONES
   (ID Number(*,0) PRIMARY KEY,
	Descripcion Varchar2(100 BYTE),
	Modelo_General Varchar2(100 BYTE),
	Modelo_Especifico Varchar2(100 BYTE),
	Capacidad_Pasajeros Number(*,0)
    );
    
CREATE SEQUENCE Id_TIPOS_AVION
increment
by 1
start with 1 minvalue 1;
    
CREATE TABLE PILOTOS
   (ID Number(*,0) PRIMARY KEY,
	Tipo_Licencia Varchar2(50 BYTE), /* En oracle se debe realizar un check */
	Cargo Varchar2(50 BYTE),         /* En oracle se debe realizar un check */
	Nivel_Ingles Varchar2(50 BYTE), /* En oracle se debe realizar un check */
	Cantidad_Horas_Vuelo Number(*,0),
    Id_Empleado Number(*,0)
    );

CREATE SEQUENCE Id_PILOTO
increment
by 1
start with 1 minvalue 1;

--------------------------------
ALTER TABLE PASAJEROS ADD CONSTRAINT fk_Id_Check_In FOREIGN KEY (Id_Check_In) REFERENCES Check_Ins(ID);
ALTER TABLE RUTAS ADD CONSTRAINT fk_Id_Aeropuerto_Origen FOREIGN KEY (Id_Aeropuerto_Origen) REFERENCES AEROPUERTOS(ID);
ALTER TABLE RUTAS ADD CONSTRAINT fk_Id_Aeropuerto_Destino FOREIGN KEY (Id_Aeropuerto_Destino) REFERENCES AEROPUERTOS(ID);
ALTER TABLE ITINERARIOS ADD CONSTRAINT fk_1Id_Check_in FOREIGN KEY (Id_Check_in) REFERENCES Check_Ins(ID);
ALTER TABLE ITINERARIOS ADD CONSTRAINT fk_Id_Vuelo FOREIGN KEY (Id_Vuelo) REFERENCES VUELOS(ID);
ALTER TABLE ITINERARIOS ADD CONSTRAINT fk_Id_Ruta FOREIGN KEY (Id_Ruta) REFERENCES RUTAS(ID);
ALTER TABLE ITINERARIOS ADD CONSTRAINT fk_Id_Avion FOREIGN KEY (Id_Avion) REFERENCES AVIONES(ID);
ALTER TABLE CHECK_INS ADD CONSTRAINT fk_Id_Log_Vuelo FOREIGN KEY (Id_Log_Vuelo) REFERENCES LOG_VUELOS(ID);
ALTER TABLE vuelos ADD CONSTRAINT fk_Id_Rutas FOREIGN KEY (Id_Ruta) REFERENCES RUTAS(ID);
ALTER TABLE vuelos ADD CONSTRAINT fk_Id_Tripulante FOREIGN KEY (Id_Tripulante) REFERENCES ITINERARIO_TRIPULANTES(ID);
ALTER TABLE ITINERARIO_TRIPULANTES ADD CONSTRAINT fk_Id_Empleado FOREIGN KEY (Id_Empleado) REFERENCES EMPLEADOS(ID);
ALTER TABLE AVIONES ADD CONSTRAINT fk_Id_Tipo_Avion FOREIGN KEY (Id_Tipo_Avion) REFERENCES TIPOS_AVIONES(ID);
ALTER TABLE PILOTOS ADD CONSTRAINT fk_Id_Empleado FOREIGN KEY (Id_Empleado) REFERENCES EMPLEADOS(ID);


ALTER TABLE EMPLEADOS 
ADD CONSTRAINT CK_Tipo_Empleados check (Tipo_Empleados in('Piloto', 'Auxiliar de servicio'));

ALTER TABLE EMPLEADOS 
ADD CONSTRAINT CK_Estado_Empleado check (Estado_Empleado in('En vuelo', 'Activo', 'Inactivo', 'Jubilado',
'Entrenamiento', 'Licencia', 'Vacaciones'));

ALTER TABLE PILOTOS 
ADD CONSTRAINT CK_Tipo_Licencia check (Tipo_Licencia in('CPL_ME', 'CPL_IFR', 'ATPL', 'Jubilado'));

ALTER TABLE PILOTOS 
ADD CONSTRAINT CK_Cargo check (Cargo in('Comandante', 'Primer oficial'));

ALTER TABLE PILOTOS 
ADD CONSTRAINT CK_Nivel_Ingles check (Nivel_Ingles in('Nivel 1 Pre-elementary', 'Nivel 2 Elementary', 'Nivel  Pre-operational',
'Nivel 5 Extended', 'Nivel 6 Expert'));


INSERT INTO EMPLEADOS (id, Nombre, Apellido,Fecha_Nacimiento,Direccion,Sexo,Correo,Celular,Horas_Descanso,Fecha_Ingreso,Fecha_Retiro,Ubicacion_Actual,Fecha_Ultimo_Vuelo,Estado_Empleado,Tipo_Empleados) VALUES (Id_Empleado.NEXTVAL,'Ryder','Skinner','10/04/2018','Apartado núm.: 422, 6114 Mollis Av.','Femenino','ligula.Donec.luctus@sedtortor.net','734-1379',90,'08/05/2017','01/01/2019','Zeebrugge','05/05/2017','Inactivo','Piloto');


------------------------------------------
---Tablespaces
 
----1.Create 2 Tablespaces 
----a. first one with 2 Gb and 1 datafiles, tablespace should be named "avianca"
----b. Undo tablespace with 25Mb of space and 1 datafile

CREATE TABLESPACE avianca datafile 
'avianca.dbf' size 500 M,
'avianca.dbf' size 250 M
AUTOEXTEND ON NEXT 1000K MAXSIZE 1000M
EXTENT MANAGEMENT LOCAL 
SEGMENT SPACE MANAGEMENT AUTO
ONLINE;

CREATE UNDO TABLESPACE Undo1 datafile 
'Undo1.dbf' size 25 M
AUTOEXTEND OFF;

---3.Set the undo tablespace to be used in the system 
ALTER SYSTEM SET Undo1 = UNDO_TBS scope = both;


--4. Create a DBA user and assign it to the tablespace called "gofar_travel", this user has unlimited space
---on the tablespace 

CREATE USER DBAUSER IDENTIFIED BY DBAUSER
DEFAULT TABLESPACE avianca
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON avianca;

---5. Assign the dba role and permissions to connect to the user just created 

GRANT DBA TO DBAUSER;
GRANT CONNECT, RESOURCE TO DBAUSER;


---6. Create 2 profiles. 
---a. Profile 1: "clerk " password life 40 days, one session per user, 10 minutes idle, 4 failed
---login attempts

CREATE PROFILE clerk LIMIT
SESSIONS_PER_USER 1
CPU_PER_SESSION UNLIMITED
CPU_PER_CALL UNLIMITED
CONNECT_TIME 240
IDLE_TIME 10
PRIVATE_SGA 20 M
FAILED_LOGIN_ATTEMPTS 4
PASSWORD_LIFE_TIME 40
PASSWORD_REUSE_MAX 4
PASSWORD_LOCK_TIME 1
PASSWORD_GRACE_TIME 2;


-Profile 2: "development" password life 15 days, one session per user, 3 minutes idle, 2 failed login
-attempts

CREATE PROFILE finance LIMIT
SESSIONS_PER_USER 2
CPU_PER_SESSION UNLIMITED
CPU_PER_CALL UNLIMITED
CONNECT_TIME 240
IDLE_TIME 30
PRIVATE_SGA 20 M
FAILED_LOGIN_ATTEMPTS 4
PASSWORD_LIFE_TIME 100
PASSWORD_REUSE_MAX 0
PASSWORD_LOCK_TIME 1
PASSWORD_GRACE_TIME 2;

CREATE USER USER1 IDENTIFIED BY USER1
DEFAULT TABLESPACE AVIANCA
PROFILE CLERK;

GRANT CREATE SESSION TO USER1;

CREATE USER USER2 IDENTIFIED BY USER2
DEFAULT TABLESPACE AVIANCA
PROFILE CLERK;

GRANT CREATE SESSION TO USER2;

CREATE USER USER3 IDENTIFIED BY USER3
DEFAULT TABLESPACE AVIANCA
PROFILE DEVELOPMENT;

GRANT CREATE SESSION TO USER3;

CREATE USER USER4 IDENTIFIED BY USER4
DEFAULT TABLESPACE AVIANCA
PROFILE DEVELOPMENT;

GRANT CREATE SESSION TO USER4;
